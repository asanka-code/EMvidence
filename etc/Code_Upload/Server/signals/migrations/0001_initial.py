# Generated by Django 2.1.7 on 2019-04-02 19:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('core_sample_start', models.IntegerField(help_text='Required. Index of first sample of this chunk')),
                ('core_sample_count', models.IntegerField(help_text='Required. The number of samples described by this segment')),
                ('core_comment', models.TextField(default='No Comment', help_text='Comment')),
            ],
            options={
                'ordering': ('signal', 'core_sample_start'),
            },
        ),
        migrations.CreateModel(
            name='Capture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('core_sample_start', models.IntegerField(default=0, help_text='Required. Index of first sample of this chunk')),
                ('core_sampling_rate', models.FloatField(default=0, help_text='Sampling rate of signal (Sps)')),
                ('core_frequency', models.FloatField(default=0, help_text='Center frequency of signal (Hz)')),
                ('core_time', models.CharField(help_text='Start time of chunk, return as string', max_length=100)),
            ],
            options={
                'ordering': ('signal', 'core_sample_start'),
            },
        ),
        migrations.CreateModel(
            name='Signal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for Signal for file storage')),
                ('public', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('core_datatype', models.CharField(choices=[('cf32', 'cf32'), ('numpy', 'numpy')], default='cf32', help_text='Required. Sample data format', max_length=100)),
                ('core_offset', models.IntegerField(default=0, help_text='Index offset of the first sample. Defaults to 0')),
                ('core_description', models.TextField(help_text='Textual description of the capture')),
                ('core_author', models.TextField(default='Unknown', help_text='Name and optionally email address of the author')),
                ('core_license', models.CharField(choices=[('CC0', 'CC0'), ('Proprietary', 'Proprietary')], default='CC0', help_text='Sample data license', max_length=100)),
                ('core_date', models.CharField(help_text='Sample data license', max_length=100)),
                ('core_sha512', models.TextField(help_text='SHA512 hash of the corresponding sample data file')),
                ('core_version', models.TextField(default='0.0.1', help_text='Version of the SigMF specification')),
                ('core_hw', models.TextField()),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='signals', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SignalSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signal_metadata', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='SignalTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a record tag (e.g. Education, Crime Scene, IoT)', max_length=200)),
            ],
        ),
        migrations.AddField(
            model_name='signal',
            name='tag',
            field=models.ManyToManyField(help_text='Select a tag for this record', to='signals.SignalTag'),
        ),
        migrations.AddField(
            model_name='capture',
            name='signal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='signals.Signal'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='signal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='signals.Signal'),
        ),
    ]
